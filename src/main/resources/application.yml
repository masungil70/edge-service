server:
  port: 9000 #서버가 연결을 수락하는 포트
  netty:
    connection-timeout: 2s #서버와 TCP연결을 수립하기까지 기다리는 시간
    idle-timeout: 15s #데이터가 전송되지 않는 경우 TCP 연결을 끊기 전에 기다리는 시간
  shutdown: graceful #우아한 종료 활성화

spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s #우아한 종료시간을 15초로 설정
  cloud:
    gateway:
      default-filters:
        - name: Retry #필터 이름
          args:
            retries: 3 #최대 3회의 재시도
            series: SERVER_ERROR
            exception: java.io.IOException, java.util.concurrent.TimeoutException
          backoff: #재시도는 firstBackOff * (factor ^ n)공식을 사용해 계산
            firstBackoff: 50ms
            maxBackOff: 500ms
            factor: 2
            basedOnPreviousValue: false

      httpclient: #http 클라이언트에 대한 속성 설정
        connect-timeout: 2000 #연결을 수립하기까지의 타임아웃(밀리초)
        response-timeout: 5s #응답을 받을 때까지의 타임아웃(기간)
        pool:
          type: elastic # 연결 풀 유형(elastic, fixed, disabled 중 하나)
          max-idle-time: 15s # 통신 채널이 닫히지 전 대기하는 시간
          max-life-time: 60s # 통신 채널이 열려 있는 기간
      routes:
        - id: catalog-routes
          uri: ${CATALOG_SERVICE_URL:http://localhost:9091}/books
          predicates:
            - Path=/books/**
        - id: order-route
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
